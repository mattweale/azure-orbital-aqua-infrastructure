name: "Terraform"

on: [workflow_dispatch]

jobs:
  terraform:
    name: "Terraform"
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      AZURE_BACKEND_RG_NAME: "rg-persistent"
      AZURE_BACKEND_SA_NAME: "samrwtfstate"
      AZURE_BACKEND_CONTAINER_NAME: "tfstate"
      AZURE_BACKEND_BLOB_NAME: "aqua.terraform.tfstate"
      TF_VAR_aqua_tools_sa: ${{ secrets.AZURE_AQUA_STORAGE_ACCOUNT }}
      TERRAFORM_DIRECTORY: "main"
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Create Terraform Backend Configuration File
      #- name: "Create Terraform Backend Configuration File"
      #  run: |
      #    cat <<EOT  >> $GITHUB_WORKSPACE/${{env.TERRAFORM_DIRECTORY}}/azurerm.tfbackend
      #    resource_group_name  = "${{env.AZURE_BACKEND_RG_NAME}}"
      #    storage_account_name = "${{env.AZURE_BACKEND_SA_NAME}}"
      #    container_name       = "${{env.AZURE_BACKEND_CONTAINER_NAME}}"
      #    key                  = "${{env.AZURE_BACKEND_BLOB_NAME}}"
      #    EOT
      #    chmod +r $GITHUB_WORKSPACE/${{env.TERRAFORM_DIRECTORY}}/azurerm.tfbackend
      #    tail $GITHUB_WORKSPACE/${{env.TERRAFORM_DIRECTORY}}/azurerm.tfbackend

      # Get the IP Address of the Build Agent
      - name: Get Build Agent IP
        run: |
          TF_VAR_BUILD_AGENT_IP=$(curl 'https://api.ipify.org')
          echo "This GitHub Workflow agent public IP is: $TF_VAR_BUILD_AGENT_IP"

      # Format Terraform
      - name: "Terraform Format"
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.3.0
          tf_actions_subcommand: "fmt"
          tf_actions_working_dir: ./{{env.TERRAFORM_DIRECTORY}}

      # Initialise Terraform with Backend Config File
      - name: "Terraform Init"
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.3.0
          tf_actions_subcommand: "init"
          #args: "-backend-config=azurerm.tfbackend"
          tf_actions_working_dir: ./${{env.TERRAFORM_DIRECTORY}}

      # Validate Terraform
      - name: "Terraform Validate"
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.3.0
          tf_actions_subcommand: "validate"
          tf_actions_working_dir: ./${{env.TERRAFORM_DIRECTORY}}

      # Generate the Terraform Plan
      - name: "Terraform Plan"
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.3.0
          tf_actions_subcommand: "plan"
          tf_actions_working_dir: ./${{env.TERRAFORM_DIRECTORY}}

      # Apply the Terraform
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.3.0
          tf_actions_subcommand: "apply"
          tf_actions_working_dir: ./{{env.TERRAFORM_DIRECTORY}}
